Redux: Create a Redux Store
const reducer = (state = 5) => {
  return state;
}

// Redux methods are available from a Redux object
// For example: Redux.createStore()
// Define the store here:
const store = Redux.createStore(reducer)



Redux: Get State from the Redux Store
const store = Redux.createStore(
  (state = 5) => state
);

// change code below this line
currentState = store.getState();



Redux: Define a Redux Action
// Define an action here:
const action = {
  type: 'LOGIN'
}



Redux: Define an Action Creator
const action = {
  type: 'LOGIN'
}
// Define an action creator here:
actionCreator = () => action



Redux: Dispatch an Action Event
const store = Redux.createStore(
  (state = {login: false}) => state
);

const loginAction = () => {
  return {
    type: 'LOGIN'
  }
};

// Dispatch the action here:
store.dispatch(loginAction())






Redux: Handle an Action in the Store
const defaultState = {
  login: false
};

const reducer = (state = defaultState, action) => {
  // change code below this line
if(action.type=="LOGIN"){
  return state = {login: true};
}else{
  return state;
}
  // change code above this line
};

const store = Redux.createStore(reducer);

const loginAction = () => {
  return {
    type: 'LOGIN'
  }
};

#ABOVE SOLVED USING TERNARY OPERATOR
const defaultState = {
  login: false
};

const reducer = (state = defaultState, action) => {
  // change code below this line
return((action.type=="LOGIN")?state = {login: true}: state)
  // change code above this line
};

const store = Redux.createStore(reducer);

const loginAction = () => {
  return {
    type: 'LOGIN'
  }
};




Redux: Use a Switch Statement to Handle Multiple Actions
const defaultState = {
  authenticated: false
};

const authReducer = (state = defaultState, action) => {

  switch (action.type) {

    case LOGIN:
      return {
        authenticated: true
      }

    case LOGOUT:
      return {
        authenticated: false
      }

    default:
      return state;

  }

};




Redux: Use const for Action Types
// change code below this line
const LOGIN = 'LOGIN';
const LOGOUT = 'LOGOUT';
// change code above this line

const defaultState = {
  authenticated: false
};

const authReducer = (state = defaultState, action) => {

  switch (action.type) {

    case LOGIN:
      return {
        authenticated: true
      }

    case LOGOUT:
      return {
        authenticated: false
      }

    default:
      return state;

  }

};

const store = Redux.createStore(authReducer);

const loginUser = () => {
  return {
    type: LOGIN
  }
};

const logoutUser = () => {
  return {
    type: LOGOUT
  }
};