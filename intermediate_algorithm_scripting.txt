// 1. Sum All Numbers in a Range

function sumAll(arr) {
let acummulate=0;
  for(i=Math.min(...arr); i<Math.max(...arr) + 1; i++){
    console.log(i);
    acummulate += i;
  }
  return acummulate;
}

//Diff Two Arrays
function diffArray(arr1, arr2) {
 return arr1.concat(arr2).filter(eachNum => !arr2.includes(eachNum) || !arr1.includes(eachNum));
  // Same, same; but different.
}

    diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]);

//Alternative
function diffArray(arr1, arr2) {
    return arr1
      .filter(eachNum => !arr2.includes(eachNum))
      .concat(
        arr2.filter(eachNum => !arr1.includes(eachNum))
      );
}


//Seek and Destroy
function destroyer(arr) {
  var argsCopy = Array.from(arguments).slice(1);
  return arr.filter(function(element) {
    return !argsCopy.includes(element);
  });
}
destroyer([1, 2, 3, 1, 2, 3], 2, 3);


where art thou

function whatIsInAName(collection, source) {
  let sourceKey = Object.keys(source);
 return collection.filter(function(obj){
    for(let i=0; i< sourceKey.length; i++){
      if(!obj.hasOwnProperty(sourceKey[i]) || obj[sourceKey[i]] !== source[sourceKey[i]] ){
        return false;
      }
    } 
   return true;
  }); 
}


//Alternative
function whatIsInAName(collection, source) {
  // "What's in a name? that which we call a rose
  // By any other name would smell as sweet.”
  // -- by William Shakespeare, Romeo and Juliet
  var srcKeys = Object.keys(source);

  // filter the collection
  return collection.filter(function (obj) {
    // return a Boolean value for `filter` method
    return srcKeys.every(function (key) {
      // reduce to Boolean value to be returned for `every` method
      return obj.hasOwnProperty(key) && obj[key] === source[key];
    });
  }); 
}

//shorter alternative
function whatIsInAName(collection, source) {
  var sourceKeys = Object.keys(source);
  return collection.filter(obj => sourceKeys.every(key => obj.hasOwnProperty(key) && obj[key] === source[key])) ;
}


console.log( whatIsInAName( [{ "apple": 1 }, { "apple": 1 }, { "apple": 1, "bat": 2 }], { "apple": 1 } ))


//Alternative
function whatIsInAName(collection, source) {
let sourceKey = Object.keys(source);
  return collection.filter(function(obj){
    for(let i=0; i<sourceKey.length;i++){
      if(!obj.hasOwnProperty(sourceKey[i]) || obj[sourceKey[i]]!== source[sourceKey[i]]){
        return false;  
      } 
    }
    return true;
  });
} 
